# Package world API
*Generated by ApiWriter v1.0*
*Package documentation for world package*

## Core Classes

<class WorldTool>
*WorldTool - Secondary tool demonstrating cross-package interaction. Generates world information and interacts with HelloTool functionality. Usage: java world.WorldTool [options] @author HelloWorld Example Project @version 1.0*
public class WorldTool

#Methods
** Main entry point for WorldTool.* Demonstrates cross-package usage and different tool patterns.** @param args Command line arguments*
public static void main(String[] args)

** Parses command line arguments.** @param args Command line arguments* @throws IllegalArgumentException if arguments are invalid*
private static void parseArguments(String[] args) throws IllegalArgumentException

** Validates that the generated output meets quality requirements.* Demonstrates defensive programming with comprehensive validation.** @param greeting The greeting to validate* @param worldInfo The world info to validate* @throws IllegalStateException if output validation fails*
private static void validateOutput(String greeting, String worldInfo) throws IllegalStateException

** Prints usage information to stderr.*
private static void printUsage()

</class WorldTool>

<class WorldUtils>
*WorldUtils - Utility functions for world information generation. Provides factual data with proper validation and error handling. @author HelloWorld Example Project @version 1.0*
public class WorldUtils

#Methods
** Generates comprehensive world information.* Provides factual data about global demographics and geography.** @return Formatted world information string* @throws IllegalStateException if world data cannot be generated*
public static String generateWorldInfo() throws IllegalStateException

** Formats a population number for human-readable display.** @param population The population count to format* @return Formatted population string* @throws IllegalArgumentException if population is negative*
public static String formatPopulation(long population) throws IllegalArgumentException

** Validates that world information meets quality standards.** @param worldInfo The world info to validate* @return true if the world info is valid and complete*
public static boolean isValidWorldInfo(String worldInfo)

** Gets the current estimated world population.** @return Current world population estimate*
public static long getWorldPopulation()

</class WorldUtils>

---
*Package world provides core functionality with professional error handling*
*All classes follow defensive programming principles with comprehensive assertions*
