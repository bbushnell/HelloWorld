# Package world API
*World information generation with cross-package interaction*
*Generated for HelloWorld example project*

## Core Classes

<class WorldTool>
*Secondary tool demonstrating cross-package interaction*
*Generates world information and interacts with HelloTool functionality*
*Usage: java world.WorldTool [options]*
public class WorldTool

#Methods
*Main entry point for WorldTool*
*Demonstrates cross-package usage and different tool patterns*
public static void main(String[] args)

*Parses command line arguments*
private static void parseArguments(String[] args)

*Validates that the generated output meets quality requirements*
*Demonstrates defensive programming with comprehensive validation*
private static void validateOutput(String greeting, String worldInfo)

*Prints usage information to stderr*
private static void printUsage()
</class WorldTool>

<class WorldUtils>
*Utility functions for world information generation*
*Provides factual data with proper validation and error handling*
public class WorldUtils

#Methods
*Generates comprehensive world information*
*Provides factual data about global demographics and geography*
public static String generateWorldInfo()

*Formats a population number for human-readable display*
public static String formatPopulation(long population)

*Validates that world information meets quality standards*
public static boolean isValidWorldInfo(String worldInfo)

*Gets the current estimated world population*
public static long getWorldPopulation()
</class WorldUtils>

---
*Package world demonstrates cross-package interaction with hello package*
*Combines WorldUtils data generation with HelloUtils greeting functionality*