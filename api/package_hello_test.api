# Package hello API
*Generated by ApiWriter v1.0*
*Package documentation for hello package*

## Core Classes

<class HelloTool>
*HelloTool - Primary greeting tool demonstrating professional Java patterns. Supports customizable greetings with proper argument validation and error handling. Usage: java hello.HelloTool [name] [options] @author HelloWorld Example Project @version 1.0*
public class HelloTool

#Methods
** Main entry point for HelloTool.* Demonstrates proper argument parsing, assertions, and error handling.** @param args Command line arguments*
public static void main(String[] args)

** Parses command line arguments and extracts the name parameter.** @param args Command line arguments* @return The name to greet* @throws IllegalArgumentException if arguments are invalid*
private static String parseArguments(String[] args) throws IllegalArgumentException

** Prints usage information to stderr.*
private static void printUsage()

</class HelloTool>

<class HelloUtils>
*HelloUtils - Utility functions for greeting generation. Demonstrates defensive programming with comprehensive input validation. @author HelloWorld Example Project @version 1.0*
public class HelloUtils

#Methods
** Generates a contextual greeting for the specified name.* Uses time-based greeting selection for natural interaction.** @param name The name to greet (must be non-null and non-empty)* @return A formatted greeting string* @throws IllegalArgumentException if name is null or empty*
public static String generateGreeting(String name) throws IllegalArgumentException

** Sanitizes a name for safe display.* Removes potentially problematic characters while preserving readability.** @param name The raw name to sanitize* @return A sanitized version of the name*
private static String sanitizeName(String name)

** Selects an appropriate greeting prefix based on current time.* Demonstrates time-aware functionality for natural interaction.** @return A greeting prefix appropriate for the current time*
private static String selectGreetingPrefix()

** Validates that a name meets basic requirements for greeting generation.** @param name The name to validate* @return true if the name is valid for greeting generation*
public static boolean isValidName(String name)

</class HelloUtils>

---
*Package hello provides core functionality with professional error handling*
*All classes follow defensive programming principles with comprehensive assertions*
